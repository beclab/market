name: Push Terminus Frontend to Dockerhub

on:
  workflow_dispatch:

  push:
    branches:
      - "origin/dev/zhy"
    tags:
      - "t*"

jobs:
  update_dockerhub:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Print the actor's username
        run: echo "The actor is ${{ github.actor }}"
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      - name: get latest tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        id: get-latest-tag
        with:
          fallback: latest
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "16.18"
      - name: Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/packagge-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install fonttools
        run: pip3 install fonttools brotli
      - name: Download fonttools Files
        run: |
          pwd
          curl -L -o fonttools.zip https://cdn.bttcdn.com/common/fonttools.zip
          sudo unzip fonttools.zip
      - name: Python Icon
        run: pwd;cd ./fonttools; sudo node python-icon.js
      - name: subset Icon
        run: |
          sudo chmod 700 fonttools
          cd ./fonttools
          ./subset_font.sh nyTnjDwKNJ_190FjzaqkNCeE.woff2 unicodes.txt MaterialSymbolsRounded.woff2 ../src/assets/fonts
      - name: Install
        run: |
          npm i -g @quasar/cli
      - name: Build terminus
        run: npm install -d;npm run build;
      - run: ls dist
      - run: docker info
      - name: Build the terminus Docker image
        run: |
          docker build . --tag beclab/market-frontend:${{ steps.get-latest-tag.outputs.tag }}
          docker push beclab/market-frontend:${{ steps.get-latest-tag.outputs.tag }}
